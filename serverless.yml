service: aws-learning

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  profile: serverlessUser
  environment:
    tableName: ${self:custom.tableName}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "*"


package:
  individually: true
  exclude:
    - .git/**
    - node_modules/**
    - .venv/**

plugins:
  - serverless-s3-sync
  - serverless-webpack


custom:
  tableName: player-points
  s3Sync:
    - bucketName: myserverlessprojectuploadbucket-001001
      localDir: UploadData

functions:
  getUser:
    handler: lambdas/endpoints/getUser.handler
    events:
      - httpApi:
          path: /get-user/{ID}
          method: GET
          cors: true
  getPlayerScore:
    handler: lambdas/endpoints/getPlayerScore.handler
    events:
      - httpApi:
          path: /get-user-score/{ID}
          method: GET
          cors: true
  createPlayerScore:
    handler: lambdas/endpoints/createPlayerScore.handler
    events:
      - httpApi:
          path: /create-player-score/{ID}
          method: POST
          cors: true 

resources:
  Resources:
    DemoBucketUpload:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: myserverlessprojectuploadbucket-001001
    MyDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
